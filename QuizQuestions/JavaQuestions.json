{
  "javaQuestions": [
    {
      "question": "Which keyword is used to define a constant in Java?",
      "options": [
        "A. static",
        "B. final",
        "C. const",
        "D. constant"
      ],
      "correctAnswer": "B"
    },
    {
      "question": "Which of the following is NOT a primitive data type in Java?",
      "options": [
        "A. int",
        "B. float",
        "C. String",
        "D. boolean"
      ],
      "correctAnswer": "C"
    },
    {
      "question": "Which access modifier has the most restrictive access level in Java?",
      "options": [
        "A. public",
        "B. protected",
        "C. default",
        "D. private"
      ],
      "correctAnswer": "D"
    },
    {
      "question": "Which of the following statements about Java interfaces is correct?",
      "options": [
        "A. Interfaces can have constructors",
        "B. Interfaces can contain concrete method implementations",
        "C. Interface methods are public abstract by default",
        "D. Interfaces can be instantiated"
      ],
      "correctAnswer": "C"
    },
    {
      "question": "Which keyword is used for exception handling in Java?",
      "options": [
        "A. throw",
        "B. throws",
        "C. try-catch",
        "D. All of the above"
      ],
      "correctAnswer": "D"
    },
    {
      "question": "Which collection class is thread-safe in Java?",
      "options": [
        "A. ArrayList",
        "B. HashMap",
        "C. Vector",
        "D. LinkedList"
      ],
      "correctAnswer": "C"
    },
    {
      "question": "Which of the following is NOT a requirement for method overloading in Java?",
      "options": [
        "A. Same method name",
        "B. Different parameter list",
        "C. Different return type",
        "D. Can be in the same class"
      ],
      "correctAnswer": "C"
    },
    {
      "question": "Which statement about abstract classes in Java is incorrect?",
      "options": [
        "A. Abstract classes cannot be instantiated",
        "B. Abstract classes must contain abstract methods",
        "C. Abstract classes can have constructors",
        "D. Abstract classes can contain concrete methods"
      ],
      "correctAnswer": "B"
    },
    {
      "question": "Which keyword is used to create an object in Java?",
      "options": [
        "A. create",
        "B. new",
        "C. malloc",
        "D. object"
      ],
      "correctAnswer": "B"
    },
    {
      "question": "Which of the following is NOT a method of the Object class in Java?",
      "options": [
        "A. toString()",
        "B. equals()",
        "C. hashCode()",
        "D. wait()"
      ],
      "correctAnswer": "D"
    },
    {
      "question": "Which statement about Java garbage collection is correct?",
      "options": [
        "A. Programmers can specify when garbage collection occurs",
        "B. Garbage collection guarantees no memory leaks",
        "C. The finalize() method is always called",
        "D. Garbage collector thread typically has low priority"
      ],
      "correctAnswer": "D"
    },
    {
      "question": "Which keyword is used to implement inheritance in Java?",
      "options": [
        "A. implements",
        "B. extends",
        "C. inherit",
        "D. super"
      ],
      "correctAnswer": "B"
    },
    {
      "question": "Which statement about String and StringBuilder in Java is correct?",
      "options": [
        "A. String is mutable, StringBuilder is immutable",
        "B. String is immutable, StringBuilder is mutable",
        "C. Both are mutable",
        "D. Both are immutable"
      ],
      "correctAnswer": "B"
    },
    {
      "question": "Which of the following is NOT an access modifier in Java?",
      "options": [
        "A. public",
        "B. private",
        "C. protected",
        "D. internal"
      ],
      "correctAnswer": "D"
    },
    {
      "question": "Which statement about polymorphism in Java is correct?",
      "options": [
        "A. It includes only compile-time polymorphism",
        "B. It includes only runtime polymorphism",
        "C. It includes both compile-time and runtime polymorphism",
        "D. It does not include method overloading"
      ],
      "correctAnswer": "C"
    }
  ]
}
