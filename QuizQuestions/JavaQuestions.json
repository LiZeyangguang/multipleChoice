[
  {
    "question": "Which keyword is used to define a constant in Java?",
    "options": {
      "a": "static",
      "b": "final",
      "c": "const",
      "d": "constant"
    },
    "answer": "b"
  },
  {
    "question": "Which of the following is NOT a primitive data type in Java?",
    "options": {
      "a": "int",
      "b": "float",
      "c": "String",
      "d": "boolean"
    },
    "answer": "c"
  },
  {
    "question": "Which access modifier has the most restrictive access level in Java?",
    "options": {
      "a": "public",
      "b": "protected",
      "c": "default",
      "d": "private"
    },
    "answer": "d"
  },
  {
    "question": "Which of the following statements about Java interfaces is correct?",
    "options": {
      "a": "Interfaces can have constructors",
      "b": "Interfaces can contain concrete method implementations",
      "c": "Interface methods are public abstract by default",
      "d": "Interfaces can be instantiated"
    },
    "answer": "c"
  },
  {
    "question": "Which keyword is used for exception handling in Java?",
    "options": {
      "a": "throw",
      "b": "throws",
      "c": "try-catch",
      "d": "All of the above"
    },
    "answer": "d"
  },
  {
    "question": "Which collection class is thread-safe in Java?",
    "options": {
      "a": "ArrayList",
      "b": "HashMap",
      "c": "Vector",
      "d": "LinkedList"
    },
    "answer": "c"
  },
  {
    "question": "Which of the following is NOT a requirement for method overloading in Java?",
    "options": {
      "a": "Same method name",
      "b": "Different parameter list",
      "c": "Different return type",
      "d": "Can be in the same class"
    },
    "answer": "c"
  },
  {
    "question": "Which statement about abstract classes in Java is incorrect?",
    "options": {
      "a": "Abstract classes cannot be instantiated",
      "b": "Abstract classes must contain abstract methods",
      "c": "Abstract classes can have constructors",
      "d": "Abstract classes can contain concrete methods"
    },
    "answer": "b"
  },
  {
    "question": "Which keyword is used to create an object in Java?",
    "options": {
      "a": "create",
      "b": "new",
      "c": "malloc",
      "d": "object"
    },
    "answer": "b"
  },
  {
    "question": "Which of the following is NOT a method of the Object class in Java?",
    "options": {
      "a": "toString()",
      "b": "equals()",
      "c": "hashCode()",
      "d": "wait()"
    },
    "answer": "d"
  },
  {
    "question": "Which statement about Java garbage collection is correct?",
    "options": {
      "a": "Programmers can specify when garbage collection occurs",
      "b": "Garbage collection guarantees no memory leaks",
      "c": "The finalize() method is always called",
      "d": "Garbage collector thread typically has low priority"
    },
    "answer": "d"
  },
  {
    "question": "Which keyword is used to implement inheritance in Java?",
    "options": {
      "a": "implements",
      "b": "extends",
      "c": "inherit",
      "d": "super"
    },
    "answer": "b"
  },
  {
    "question": "Which statement about String and StringBuilder in Java is correct?",
    "options": {
      "a": "String is mutable, StringBuilder is immutable",
      "b": "String is immutable, StringBuilder is mutable",
      "c": "Both are mutable",
      "d": "Both are immutable"
    },
    "answer": "b"
  },
  {
    "question": "Which of the following is NOT an access modifier in Java?",
    "options": {
      "a": "public",
      "b": "private",
      "c": "protected",
      "d": "internal"
    },
    "answer": "d"
  },
  {
    "question": "Which statement about polymorphism in Java is correct?",
    "options": {
      "a": "It includes only compile-time polymorphism",
      "b": "It includes only runtime polymorphism",
      "c": "It includes both compile-time and runtime polymorphism",
      "d": "It does not include method overloading"
    },
    "answer": "c"
  }
]
